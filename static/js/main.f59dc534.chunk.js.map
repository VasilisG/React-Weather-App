{"version":3,"sources":["components/Constants.js","components/SearchBar.js","components/MainWeatherItem.js","components/AdditionalWeatherItem.js","components/Results.js","App.js","reportWebVitals.js","index.js"],"names":["WEATHER_IMAGE_ENDPOINT","DAY_LOOKUP","0","1","2","3","4","5","6","SearchBar","props","state","handleChange","bind","handleClick","event","this","setState","target","value","city","length","setLoadingStatus","fetch","then","response","json","data","newResponse","newData","callBack","preventDefault","className","type","placeholder","onChange","name","onClick","React","Component","MainWeatherItem","weather_state_abbr","weather_state_name","src","getWeatherStateIcon","alt","getAltName","country","Math","round","the_temp","AdditionalWeatherItem","date","Date","setDate","getDate","nextDay","getDay","weather_state","Results","status","forecasts","slice","map","elem","index","App","getForecasts","loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f59dc534.chunk.js","sourcesContent":["export const META_WEATHER_ENDPOINT = \"https://the-ultimate-api-challenge.herokuapp.com/https://www.metaweather.com/api/location/search?query=\";\r\nexport const META_WEATHER_LOCATION_ENDPOINT = \"https://the-ultimate-api-challenge.herokuapp.com/https://www.metaweather.com/api/location/\";\r\nexport const WEATHER_IMAGE_ENDPOINT = \"https://www.metaweather.com/static/img/weather/\";\r\n\r\nexport const DAY_LOOKUP = {\r\n    0 : 'Sunday', \r\n    1 : 'Monday', \r\n    2 : 'Tuesday', \r\n    3 : 'Wednesday', \r\n    4 : 'Thursday', \r\n    5 : 'Friday', \r\n    6 : 'Saturday' \r\n};","import React from 'react';\r\nimport { META_WEATHER_ENDPOINT, META_WEATHER_LOCATION_ENDPOINT } from './Constants'; \r\n\r\nclass SearchBar extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            'city' : ''\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n            'city' : event.target.value\r\n        });\r\n    }\r\n\r\n    handleClick(event){\r\n        if(this.state.city.length >= 3){\r\n            this.props.setLoadingStatus(1);\r\n            fetch(META_WEATHER_ENDPOINT + this.state.city)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                if(data.length){\r\n                    fetch(META_WEATHER_LOCATION_ENDPOINT + data[0]['woeid'] + '/')\r\n                    .then(newResponse => newResponse.json())\r\n                    .then(newData => {\r\n                        this.props.callBack(newData['consolidated_weather'], newData['parent']['title'], newData['title']);\r\n                        this.props.setLoadingStatus(0);\r\n                    });\r\n                }\r\n                else {\r\n                    this.props.callBack([], '', '');\r\n                    this.props.setLoadingStatus(0);\r\n                }\r\n            });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"element-container search-container\">\r\n                <form className=\"search-form city-form\">\r\n                    <input type=\"text\" className=\"search-field city-field\" placeholder=\"Type city...\" onChange={this.handleChange}/>\r\n                    <button type=\"submit\" name=\"search\" className=\"search-button city\" onClick={this.handleClick}></button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchBar;","import React from 'react';\r\nimport { WEATHER_IMAGE_ENDPOINT } from './Constants';\r\n\r\nclass MainWeatherItem extends React.Component {\r\n\r\n    getWeatherStateIcon(){\r\n        return WEATHER_IMAGE_ENDPOINT + this.props.data.weather_state_abbr + '.svg';\r\n    }\r\n\r\n    getAltName(){\r\n        return this.props.data.weather_state_name;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-item-container\">\r\n                <div className=\"icon-container\">\r\n                    <img className=\"weather-icon\" src={this.getWeatherStateIcon()} alt={this.getAltName()}/>\r\n                </div>\r\n                <div className=\"info-container\">\r\n                    <p className=\"today\">Today</p>\r\n                    <div className=\"city-info\">\r\n                        <p className=\"city\">{this.props.city}</p>\r\n                        <span className=\"country\">{this.props.country}</span>\r\n                    </div>\r\n                    <p className=\"temperature\">Temperature: <span className=\"celsius\">{Math.round(this.props.data.the_temp)}<sup className=\"celsius-sign\">o</sup>C</span></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainWeatherItem;","import React from 'react';\r\nimport { DAY_LOOKUP, WEATHER_IMAGE_ENDPOINT } from './Constants';\r\n\r\nclass AdditionalWeatherItem extends React.Component {\r\n\r\n    getDay(){\r\n        var date = new Date();\r\n        date.setDate(date.getDate() + this.props.nextDay);\r\n        return DAY_LOOKUP[date.getDay()];\r\n    }\r\n\r\n    getWeatherStateIcon(){\r\n        return WEATHER_IMAGE_ENDPOINT + this.props.data.weather_state_abbr + '.svg';\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"additionalItem\">\r\n                <p className=\"weekday\">{this.getDay()}</p>\r\n                <img className=\"additional-weather-icon\" src={this.getWeatherStateIcon()} alt={this.props.data.weather_state}/>\r\n                <p className=\"celsius\">{Math.round(this.props.data.the_temp)}<sup className=\"celsius-sign\">o</sup>C</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdditionalWeatherItem;","import React from 'react';\r\nimport MainWeatherItem from './MainWeatherItem';\r\nimport AdditionalWeatherItem from './AdditionalWeatherItem';\r\n\r\nclass Results extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.status ? (\r\n                    <div className=\"loading-container\">\r\n                        <div className=\"loading-bar\"></div>\r\n                        <div className=\"loading-bar\"></div>\r\n                        <div className=\"loading-bar\"></div>\r\n                    </div>\r\n                ) : (\r\n                    this.props.forecasts.length ? (\r\n                        <div className=\"results-container\">\r\n                            <div className=\"forecasts-container\">\r\n                                <div className=\"forecasts-inner-container\">\r\n                                    <MainWeatherItem  data={this.props.forecasts[0]} city={this.props.city} country={this.props.country}/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"additional-container\">\r\n                                {this.props.forecasts.slice(1).map((elem, index) => <AdditionalWeatherItem key={index} data={elem} nextDay={index+1}/>)}\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <div className=\"results-container no-data\">\r\n                            <p className=\"no-data-info\">No forecast data to display.</p>\r\n                        </div>\r\n                    )\r\n                )}\r\n            </div>\r\n        )  \r\n    }\r\n}\r\n\r\nexport default Results;","import React from 'react';\nimport SearchBar from './components/SearchBar';\nimport Results from './components/Results';\nimport './App.css';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      'forecasts' : [],\n      'country' : '',\n      'city' : '',\n      'loading' : 0\n    };\n    this.getForecasts = this.getForecasts.bind(this);\n    this.setLoadingStatus = this.setLoadingStatus.bind(this);\n  }\n\n  getForecasts(forecasts, country, city){\n    this.setState({\n      'forecasts' : forecasts,\n      'city' : city,\n      'country': country\n    });\n  }\n\n  setLoadingStatus(status){\n    this.setState({\n      'loading' : status\n    });\n  }\n\n  render(){\n    return (\n      <>\n        <p className=\"app-title\">React Weather</p>\n        <div className=\"app-content\">\n          <SearchBar callBack={this.getForecasts} setLoadingStatus={this.setLoadingStatus}/>\n          <Results forecasts={this.state.forecasts} city={this.state.city} country={this.state.country} status={this.state.loading}/>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}